---
# tasks file for kubernetes

- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  ansible.builtin.shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Add the br_netfilter kerner module support for network filtering and packet manipulation for network bridges.
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Keeping the kernel parameter that controls whether the kernel should forward IP packets between network interfaces.
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true

  #bridge networking, iptables
- name: This parameter controls whether packets that pass through a network bridge should be handed off to iptables for additional processing.
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: true

- name: This parameter controls whether ip6 packets that pass through a network bridge should be handed off to iptables for additional processing.
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_set: true

- name: This parameter controls whether ip6 packets that pass through a network bridge should be handed off to iptables for additional processing.
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_set: true

- name: kubeadm init
  ansible.builtin.shell: 
    cmd: sudo kubeadm init --pod-network-cidr={{ kubernetes_master.launch_ip[0] }}
  register: kubeadm_init_output

- name: console the content
  debug: 
    var: kubeadm_init_output.stdout_lines

- name: Copy the output to the file
  ansible.builtin.copy:
    content: "{{ kubeadm_init_output.stdout_lines | to_json(indent=4, sort_keys=True) }}"
    dest: /home/k8sConf.json
    follow: yes
  delegate_to: localhost

# - name: setting the facts for token
#   ansible.builtin.set_fact:
#     kubeadm_token: kubeadm_token
#     kubeadm_hash: kubeadm_hash
#     cacheable: yes

- name: Create a .Kube directory if it does not exist
  ansible.builtin.file:
    path: $HOME/.kube
    state: directory

- name: Copy 
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    owner: root
    group: root

- name: Install Calico for CNI
  ansible.builtin.uri:
    url: '{{ kubernetes_master.calicoFile }}'
    method: GET
    dest: /home

- name: Create a Deployment by reading the definition from a local file
  kubernetes.core.k8s:
    state: present
    src: /home/calico.yaml
